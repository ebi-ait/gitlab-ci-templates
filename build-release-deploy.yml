# Template for standard CI/CD process for HCA projects
services:
  - name: quay.io/ebi-ait/ingest-base-images:docker-dind
    alias: docker

# Override these variables in project .gitlab-ci.yaml as required
variables:
  APP_NAME: $CI_PROJECT_NAME
  IMAGE_REPO_BASE_DOMAIN: quay.io/ebi-ait
  IMAGE_NAME: quay.io/ebi-ait/$CI_PROJECT_NAME:$CI_COMMIT_SHORT_SHA
  INGEST_KUBE_DEPLOYMENT_REPO: https://github.com/ebi-ait/ingest-kube-deployment.git

# If another stage is added to project .gitlab-ci.yaml, all stages will need to be specified in project .gitlab-ci.yaml
# For example, you may want to add a unit-test stage
stages:
  - test
  - build
  - release
  - deploy
  - integration

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "external_pull_request_event"'
    - if: $CI_COMMIT_BRANCH == "master"
    - if: $CI_COMMIT_BRANCH == "dev"

Unit Test:
  stage: test
  script:
    - echo "No tests specified. Please create a \"Unit Test\" job in the project template that runs on the \"test\" stage."

Build:
  stage: build
  tags:
    - dind
  script:
    - echo $QUAY_PASSWORD | docker login quay.io -u $QUAY_USERNAME --password-stdin
    - docker build -t $IMAGE_NAME .
    - docker push $IMAGE_NAME

# Reusable job for re-tagging an image
# Must set the $ENVIRONMENT_NAME variable in the job that uses this
# This will also save the $RELEASE_TAG env as an artifact so it can be used by downstream jobs (see https://docs.gitlab.com/ee/ci/variables/#pass-an-environment-variable-to-another-job)
.tag_image: &tag_image
  stage: release
  tags:
    - dind
  script:
    - echo $QUAY_PASSWORD | docker login quay.io -u $QUAY_USERNAME --password-stdin
    - docker pull $IMAGE_NAME
    - TAG_NAME=$IMAGE_REPO_BASE_DOMAIN/$CI_PROJECT_NAME:$ENVIRONMENT_NAME-$CI_COMMIT_SHORT_SHA-$(date +'%d-%m-%Y.%s')
    - docker tag $IMAGE_NAME $TAG_NAME
    - docker push $TAG_NAME
    - echo "RELEASE_TAG=$TAG_NAME" >> release_tag.env
  artifacts:
    reports:
      dotenv: release_tag.env

# Reusable job for deploying to k8s
# Must set $ENVIRONMENT_NAME, $DEPLOY_URL in the job that uses this
# You must also set a dependency on the upstream tag_image job to receive the $RELEASE_TAG (see https://docs.gitlab.com/ee/ci/variables/#pass-an-environment-variable-to-another-job)
.deploy_k8s: &deploy_k8s
  stage: deploy
  image: quay.io/ebi-ait/ingest-base-images:dtzar_helm-kubectl-3.5.0
  environment:
    name: $ENVIRONMENT_NAME
    url: $DEPLOY_URL
    kubernetes:
      namespace: $ENVIRONMENT_NAME-environment
  script:
    - git clone $INGEST_KUBE_DEPLOYMENT_REPO k8s
    - source k8s/config/replicas/environment_$ENVIRONMENT_NAME
    - REPLICA_VAR_NAME=$(echo $APP_NAME | sed 's/-/_/' | tr '[:lower:]' '[:upper:]')_REPLICAS
    - REPLICAS=$(eval "echo \"\$$REPLICA_VAR_NAME\"")
    - echo deploying $APP_NAME with $REPLICAS replicas
    - helm package k8s/apps/$APP_NAME
    - helm upgrade -f k8s/apps/$ENVIRONMENT_NAME.yaml $APP_NAME k8s/apps/$APP_NAME --set-string environment=dev,image=$RELEASE_TAG,replicas=$REPLICAS,gitlab_app=$CI_PROJECT_PATH_SLUG,gitlab_env=$CI_ENVIRONMENT_SLUG --wait --install

# Reusable job for running integration tests
# Must set $ENVIRONMENT_NAME in the job that uses this
.run_integration: &run_integration
  stage: integration
  trigger:
    project: hca/ingest-integration-tests
    branch: $ENVIRONMENT_NAME
    strategy: depend

Release dev:
  only:
    - dev
  variables:
    ENVIRONMENT_NAME: dev
  <<: *tag_image 

Release staging:
  only:
    - master
  variables:
    ENVIRONMENT_NAME: staging
  <<: *tag_image 

Release prod:
  only:
    - master
  when: manual
  allow_failure: false
  variables:
    ENVIRONMENT_NAME: prod
  <<: *tag_image 

Deploy dev:
  dependencies:
    - Release dev
  only:
    - dev
  needs: ["Release dev"]
  variables:
    ENVIRONMENT_NAME: dev
    DEPLOY_URL: https://dev.contribute.data.humancellatlas.org/
  <<: *deploy_k8s

Deploy staging:
  dependencies:
    - Release staging
  needs: ["Release staging"]
  only:
    - master
  variables:
    ENVIRONMENT_NAME: staging
    DEPLOY_URL: https://staging.contribute.data.humancellatlas.org/
  <<: *deploy_k8s

Deploy prod:
  dependencies:
    - Release prod
  only:
    - master
  when: manual
  needs: ["Release prod"]
  allow_failure: false
  variables:
    ENVIRONMENT_NAME: prod
    DEPLOY_URL: https://contribute.data.humancellatlas.org/
  <<: *deploy_k8s

Integration dev:
  only:
    - dev
  variables:
    ENVIRONMENT_NAME: dev
  <<: *run_integration

Integration staging:
  only:
    - master
  variables:
    ENVIRONMENT_NAME: staging
  <<: *run_integration

Integration prod:
  needs: ["Deploy prod"]
  only:
    - master
  variables:
    ENVIRONMENT_NAME: prod
  <<: *run_integration
